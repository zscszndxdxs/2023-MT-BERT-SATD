Repository,Abstract,URL,Published At,SATD related predict,ground_truth,reason
twbs,**- #32213: _reboot.scss: remove needless Stylelint disab,https://api.github.com/repos/twbs/bootstrap/releases/34937336,2020-12-07T16:24:37Z,1,1,code_debt (deed code)
angular,hardening attribute and property binding rules for <iframe> elements (#47964,https://api.github.com/repos/angular/angular/releases/82607411,2022-11-09T21:40:29Z,1,0,0
angular,do not error if files part of `srcs` are outside of package (#45622,https://api.github.com/repos/angular/angular/releases/64896341,2022-04-20T21:52:24Z,1,1,design_debt
facebook,Fix a performance issue when thousands of roots are re-rendered ([@gaearon](https://github.com/gaearon) in [#13335](https://github.com/facebook/react/issues/13335,https://api.github.com/repos/facebook/react/releases/12771739,2018-09-06T20:00:25Z,0,1,algorithm_debt(Slow algorithm)
numpy,Some specific loop structures which have an accelerated loop versiondid not release the GIL prior to NumPy 1.14.0.  This oversight has beenfixed.The `np.einsum` function will use BLAS when possible and optimize by defau,https://api.github.com/repos/numpy/numpy/releases/9134690,2018-01-07T00:50:41Z,1,1,defect_debt
tensorflow,  Added deprecation warning to `layers.experimental.SyncBatchNormalization` and suggested to use `layers.BatchNormalization` with `synchronized=True` instead,https://api.github.com/repos/tensorflow/tensorflow/releases/96657636,2023-03-23T15:50:02Z,1,1,compatibility_debt
angular,avoid duplicating comments in TestBed teardown migration (#43776,https://api.github.com/repos/angular/angular/releases/51307424,2021-10-13T18:29:22Z,1,1,code_debt
tensorflow,"Start enforcing input shape assumptions when calling Functional API Keras models. This may potentially break some users, in case there is a mismatch             between the shape used when creating `Input` objects in a Functional model, and the shape of the data passed to that model. You can fix this mismatch by         either calling the model with correctly-shaped data, or by relaxing `Input` shape assumptions (note that you can pass shapes with `None` entries for axes      that are meant to be dynamic). You can also disable the input checking entirely by setting `model.input_spec = None`.",https://api.github.com/repos/tensorflow/tensorflow/releases/34132731,2020-11-18T18:33:46Z,1,1,defect_debt
numpy,"   MAINT: Mark `npy_memchr` with `no_sanitize(""alignment"")` on cla",https://api.github.com/repos/numpy/numpy/releases/67433204,2022-05-20T21:49:25Z,0,0,0
angular,avoid broken references in .d.ts files due to @internal markers (#43527,https://api.github.com/repos/angular/angular/releases/52168866,2021-10-27T18:33:29Z,1,0,0
tensorflow,Fixes three vulnerabilities in conversion to DLPack format  ,https://api.github.com/repos/tensorflow/tensorflow/releases/35249119,2020-12-14T18:16:52Z,0,1,code_debt
numpy,   BLD: add workaround in setup.py for newer setuptoo,https://api.github.com/repos/numpy/numpy/releases/87244731,2022-12-26T13:56:53Z,1,0,0
angular,Ensure Router preloading works with lazy component and static children (#49571,https://api.github.com/repos/angular/angular/releases/97368285,2023-03-29T19:38:04Z,0,0,0
facebook," We added support for [defining stateless components as functions](/react/blog/2015/09/10/react-v0.14-rc1.html#stateless-function-components) in React 0.14. However, React 0.14 still allowed you to define a class component without extending `React.Component` or using `React.createClass()`, so [we couldnâ€™t reliably tell if your component is a function or a class](https://github.com/facebook/react/issues/5355), and did not allow returning `null` from it. This issue is solved in React 15, and you can now return `null` from any component, whether it is a class or a function. ([@jimfb](https://github.com/jimfb) in [#5884](https://github.com/facebook/react/pull/5884))",https://api.github.com/repos/facebook/react/releases/2982082,2016-04-08T16:05:25Z,1,1,design debt
angular,disable animations when running e2e testing to fix flaky test,https://api.github.com/repos/angular/angular/releases/58545207,2022-02-02T19:42:46Z,1,1,test debt
facebook,Clear fields on unmount to avoid memory leaks. ([@trueadm](http://github.com/trueadm) in [#14276](https://github.com/facebook/react/pull/14276,https://api.github.com/repos/facebook/react/releases/14628791,2018-12-20T01:39:58Z,1,1,code_debt (low_code_quality)
angular,remove unnecessary file extractions from `ng_package` (#45470,https://api.github.com/repos/angular/angular/releases/64289067,2022-04-12T20:06:41Z,1,1,code_debt(Dead code)
angular,deduplicate imports of standalone components in JIT compiler (#46439,https://api.github.com/repos/angular/angular/releases/70216062,2022-06-22T23:50:42Z,1,1,code_debt(Duplicated code)
twbs,"**- #31892: Remove redundant visually hidden ""(current)"" from pagination contro",https://api.github.com/repos/twbs/bootstrap/releases/33814902,2020-11-11T17:13:10Z,1,1,code_debt
angular,use WeakMap to reduce memory usage when memoizin,https://api.github.com/repos/angular/angular/releases/58545207,2022-02-02T19:42:46Z,1,0,0
facebook,Add back support for running in production mode. ([@gaearon](https://github.com/gaearon) in [#11112](https://github.com/facebook/react/pull/11112,https://api.github.com/repos/facebook/react/releases/8452049,2017-11-09T15:17:08Z,0,0,0
angular,better error message when directive extends a component (#45658,https://api.github.com/repos/angular/angular/releases/64896341,2022-04-20T21:52:24Z,1,0,0
tensorflow,"Renamed `tf.image` functions to remove duplicate ""image"" where it is redundant.",https://api.github.com/repos/tensorflow/tensorflow/releases/17852985,2019-06-07T15:03:27Z,1,1,deed code
numpy,   MAINT: be more tolerant of setuptools >= ,https://api.github.com/repos/numpy/numpy/releases/58652401,2022-02-04T01:26:51Z,0,0,0
tensorflow,"Optimize `tf.function` invocation, by removing redundant list converter.  ",https://api.github.com/repos/tensorflow/tensorflow/releases/28382437,2020-07-09T02:34:25Z,0,0,0
facebook,Fix reading context provided from the tree managed by React DOM. ([@acdlite](https://github.com/acdlite) in [#12779](https://github.com/facebook/react/pull/12779))### React Call Return (Experimenta,https://api.github.com/repos/facebook/react/releases/11147851,2018-05-24T01:19:16Z,1,0,0
pytorch,Fixed launch bounds for gathertopk kernel ([#60314](https://github.com/pytorch/pytorch/pull/60314,https://api.github.com/repos/pytorch/pytorch/releases/51800581,2021-10-21T15:49:53Z,0,0,0
facebook,Fixed an issue when using `ReactDOM` together with `ReactDOMServer`. ([@wacii](https://github.com/wacii) in [#9005](https://github.com/facebook/react/pull/9005,https://api.github.com/repos/facebook/react/releases/6018062,2017-04-07T21:43:16Z,0,0,0
angular,correct type of nextState parameter in canDeactivate (#48038,https://api.github.com/repos/angular/angular/releases/83941790,2022-11-23T03:04:25Z,0,0,0
pytorch,Fixed the Metal `torch.clamp` shader function for x86_64 ([#63062](https://github.com/pytorch/pytorch/pull/63062,https://api.github.com/repos/pytorch/pytorch/releases/51800581,2021-10-21T15:49:53Z,0,0,0
numpy,   BUG: Remove temporary change of descr/flags in VOID functio,https://api.github.com/repos/numpy/numpy/releases/40588036,2021-03-27T23:33:19Z,1,1,defect debts
tensorflow," is a utility based on `tf.data.Dataset`, meant to replace the legacy `ImageDataGenerator`. It takes you from a structured directory of images to a labeled dataset, in one function call. Note that it doesn't perform image data augmentation (which is meant to be done using preprocessing layers).  ",https://api.github.com/repos/tensorflow/tensorflow/releases/28382437,2020-07-09T02:34:25Z,1,0,0
tensorflow,Add toggles `tf.enable_control_flow_v2()` and `tf.disable_control_flow_v2()` for enabling/disabling v2 control flo,https://api.github.com/repos/tensorflow/tensorflow/releases/20178937,2019-09-23T13:22:21Z,0,0,0
twbs,"Release announcement blog post: https://blog.getbootstrap.com/2016/07/25/bootstrap-3-3-7-released/****### JavaScript**- #19192 Fix keyboard navigation for toggle buttons (checkbox, radio, single toggle) following a mouse click**- #19659: Clear tooltip's `$element` to prevent leaking memory**- #20019: Avoid calling `jQuery('#')` since it's a syntax error in jQuery 3**- #20259: Backport jQuery-related JS unit test fixes from v4**- #20278: button.js: Set disabled property in addition to disabled attribute, for jQuery 3 compatibility**- #20313: Avoid using `$.offset()` on SVGs since it gives incorrect results in jQuery 3**- #20338: Update jQuery version check and jQuery dependency version range to allow jQuery 3****### CSS****No significant changes.****### Accessibility**- #19704: Add `aria-label` and callout about labeling pagination components****### Docs**- #19263 Bump html5shiv to v3.7.3**- #19273 Port v4 browser support table format to v3**- #19893: Update jQuery to v1.12.4**- Numerous Wall of Browser Bugs updates**",https://api.github.com/repos/twbs/bootstrap/releases/3733222,2016-07-25T16:04:06Z,1,1,code_debt
tensorflow,"Add 5D support for `BroadcastSub`, `Maximum`, `Minimum`, `Transpose` and `BroadcastDiv`.    ",https://api.github.com/repos/tensorflow/tensorflow/releases/28928821,2020-07-27T18:37:19Z,0,0,0
twbs,**- #31114: Docs: forms accessibility clean,https://api.github.com/repos/twbs/bootstrap/releases/31942538,2020-09-29T15:38:32Z,1,1,documentation_debt
tensorflow,"Low-level graph construction now calls the TensorFlow C API. This change should be invisible to most users, but can be disabled by setting the environment variable `TF_C_API_GRAPH_CONSTRUCTION=0` in this release. Future releases will remove the ability to disable this change. Please [file a bug](https://github.com/tensorflow/tensorflow/issues/new) if you find yourself using this escape hatch.",https://api.github.com/repos/tensorflow/tensorflow/releases/10528301,2018-04-13T03:55:51Z,1,1,design debt
facebook,"The server renderer has been completely rewritten, with some improvements:",https://api.github.com/repos/facebook/react/releases/7897724,2017-09-26T17:19:18Z,1,0,0
facebook,"*/}</div>`- Children are now transformed directly into arguments instead of being wrapped in an array  E.g. `<div><Component1/><Component2/></div>` is transformed into `React.DOM.div(null, Component1(null), Component2(null))`.  Previously this would be transformed into `React.DOM.div(null, [Component1(null), Component2(null)])`.  If you were using React without JSX previously, your code should still work.## react-tools- Fixed a number of bugs when transforming directories- No longer re-write `require()`s to be relative unless specified",https://api.github.com/repos/facebook/react/releases/12650,2013-07-19T19:43:51Z,1,1,code_debts
pytorch,Eliminate static default_extra_files_mobile from header import.h ([#50832](https://github.com/pytorch/pytorch/pull/50832,https://api.github.com/repos/pytorch/pytorch/releases/39280362,2021-03-04T20:44:39Z,0,0,0
twbs,**- #35696: Docs - Remove duplicate Octicons entry in icons li,https://api.github.com/repos/twbs/bootstrap/releases/66823120,2022-05-13T16:44:56Z,1,1,deed code
twbs,**- Removed Gist creation in web-based Customizer since anonymous gists were disabled long ago by GitHu,https://api.github.com/repos/twbs/bootstrap/releases/14528836,2018-12-14T00:27:06Z,0,1,compatibility_debt
tensorflow,Add CPU and GPU implementation of modified variation of [`FTRL`](https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/raw_ops/ApplyFtrl)/[`FTRLV2`](https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/raw_ops/ApplyFtrlV2) that can triggerred by `multiply_linear_by_lr` allowing a learning rate of zero.     ### `tf.data`: ,https://api.github.com/repos/tensorflow/tensorflow/releases/28693551,2020-07-18T04:50:38Z,0,0,0
tensorflow,  Fix usage of `__getitem__` slicing in Keras Functional APIs when the inputs are `RaggedTensor` objects.  ,https://api.github.com/repos/tensorflow/tensorflow/releases/46138555,2021-07-13T17:43:32Z,0,0,0
pytorch,Clarified how to check memory saving if using gradient_as_bucket_view ([#71483](https://github.com/pytorch/pytorch/pull/71483,https://api.github.com/repos/pytorch/pytorch/releases/61381447,2022-03-10T16:59:55Z,0,0,0
twbs,**- #36674: Docs: add indeterminate disabled checkbox examp,https://api.github.com/repos/twbs/bootstrap/releases/72344034,2022-07-19T15:47:21Z,1,0,0
numpy,"Previously it would fail when trying to compute a finite range for the data.Since the range is ignored anyway when the bins are given explicitly, this errorwas needless.Note that calling ``histogram`` on NaN values continues to raise the``RuntimeWarning`` s typical of working with nan values, which can be silencedas usual with ``errstate``.``histogram`` works on datetime types, when explicit bin edges are giv",https://api.github.com/repos/numpy/numpy/releases/12059706,2018-07-23T16:38:57Z,1,1,defect_code
numpy,"`numpy.matmul` is now a ufunc which means that both the function and the``__matmul__`` operator can now be overridden by ``__array_ufunc__``. Itsimplementation has also changed. It uses the same BLAS routines as`numpy.dot`, ensuring its performance is similar for large matrices.Start and stop arrays for ``linspace``, ``logspace`` and ``geomspace",https://api.github.com/repos/numpy/numpy/releases/14641517,2018-12-20T15:40:14Z,1,0,0
pytorch,"`nn.UpSampleNearest{1, 2, 3}d` performance on CPU optimized (#31452) ([#31452](https://github.com/pytorch/pytorch/pull/31452)",https://api.github.com/repos/pytorch/pytorch/releases/25725370,2020-04-21T16:26:30Z,1,0,0
twbs,"Minor release to add carousel indicators, improve tooltips, improve dev setup, and fix hella bugs.**- **Repository changes:****  - **Local instead of global dependencies** for our makefile and install process. Now getting started is way easierâ€”just run `npm install`.**  - Upgraded to jQuery 1.9. No changes were needed, but we did upgrade the included jQuery file to the latest release.**  - Moved changelog to be within the repo instead of as a wiki page.**- **New and improved features:****  - **Added carousel indicators!** Add the HTML and it automagically works.**  - **Added `container` option to tooltips.** The default option is still `insertAfter`, but now you may specify where to insert tooltips (and by extension, popovers) with the optional container parameter.**  - Improved popovers now utilize `max-width` instead of `width`, have been widened from 240px to 280px, and will automatically hide the title if one has not been set via CSS `:empty` selector.**  - Improved tooltip alignment on edges with [#6713](https://github.com/twitter/bootstrap/pull/6713).**  - **Improved accessibility for links in all components.** After merging [#6441](https://github.com/twitter/bootstrap/pull/6441), link hover states now apply to the `:focus` state as well. This goes for basic `<a>` tags, as well as buttons, navs, dropdowns, and more.**  - Added print utility classes to show and hide content between `screen` and `print` via CSS.**  - Updated input groups to make them behave more like default form controls. Added `display: inline-block;`, increased `margin-bottom`, and added `vertical-align: middle;`  to match `<input>` styles.**  - Added `.horizontal-three-colors()` gradient mixin (with example in the CSS tests file).**  - Added `.text-left`, `.text-center`, and `.text-right` utility classes for easy typographic alignment.**  - Added `@ms-viewport` so IE10 can use responsive CSS when in split-screen mode.**- **Docs changes:****  - Added [new justified navigation example](https://f.cloud.github.com/assets/98681/25869/5e2f812c-4afa-11e2-9293-501cd689232d.png).**  - Added sticky footer with fixed navbar example.****See more on the [2.3.0 pull request](https://github.com/twitter/bootstrap/pull/6346).**",https://api.github.com/repos/twbs/bootstrap/releases/9879,2013-07-18T00:07:33Z,1,1,requirement debts
numpy, #16114 BLD: put openblas library in local directory on windo,https://api.github.com/repos/numpy/numpy/releases/26120271,2020-05-03T15:52:09Z,0,0,0
tensorflow,"Code that is overly dependent on the exact names attached to symbolic tensors (e.g. assumes there will be "":0"" at the end of the inputs, treats names as         unique identifiers instead of using `tensor.ref()`, etc.)  ",https://api.github.com/repos/tensorflow/tensorflow/releases/33375724,2020-11-02T21:57:54Z,1,1,code_debts
facebook,### React- Fixed memory leak when rendering on the server,https://api.github.com/repos/facebook/react/releases/2908878,2016-03-29T17:35:57Z,1,1,defect_code(memory leak)
tensorflow,  Fixes a vulnerability produced due to incomplete validation in `tf.summary.create_file_writer` ([CVE-2021-41200](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41200,https://api.github.com/repos/tensorflow/tensorflow/releases/52474767,2021-11-01T20:36:34Z,0,1,defect_debt(hack)
facebook,Fix an incorrect bailout in `useReducer()`. ([@acdlite](https://github.com/acdlite) in [#15124](https://github.com/facebook/react/pull/15124,https://api.github.com/repos/facebook/react/releases/16401945,2019-03-28T07:13:00Z,0,0,0
numpy,"Both implementations have the same ancestor (Fortran77 FFTPACK by Paul N.Swarztrauber), but pocketfft contains additional modifications which improveboth accuracy and performance in some circumstances. For FFT lengths containinglarge prime factors, pocketfft uses Bluestein's algorithm, which maintains:math:`O(N log N)` run time complexity instead of deteriorating towards:math:`O(NN)` for prime lengths. Also, accuracy for real valued FFTs with nearprime lengths has improved and is on par with complex valued FFTs.Further improvements to ``ctypes`` support in `numpy.ctypesli",https://api.github.com/repos/numpy/numpy/releases/18647761,2019-07-16T14:47:29Z,1,1,code_debt(Slow algorithm)
angular,support NgModule class as an argument of the `downgradeModule` function (#43973,https://api.github.com/repos/angular/angular/releases/54981847,2021-12-09T17:10:26Z,0,0,0
pytorch,"Documentation | [Link](https://pytorch.org/docs/stable/generated/torch.nn.parallel.DistributedDataParallel.html#torch.nn.parallel.DistributedDataParallel.join)### [Beta] NCCL Reliability - Async Error/Timeout HandlingIn the past, NCCL training runs would hang indefinitely due to stuck collectives, leading to a very unpleasant experience for users. This feature will abort stuck collectives and throw an exception/crash the process if a potential hang is detected. When used with something like torchelastic (which can recover the training process from the last checkpoint), users can have much greater reliability for distributed training. This feature is completely opt-in and sits behind an environment variable that needs to be explicitly set in order to enable this functionality (otherwise users will see the same behavior as before",https://api.github.com/repos/pytorch/pytorch/releases/33111309,2020-10-27T16:35:58Z,1,1,defect_debts
pytorch,"  - Reassigning attributes in modules correctly works now.  This example used to not work correctly, `l.a` always remained `None`.  Now it works as one would expect:  ```python  l = nn.Linear(10, 20)  l.a = None  l.a = nn.Parameter(torch.randn(2))  # l.a is correctly updated  ```- Fix bug where adding a hook could replace an existing hook- Fix `nn.Embedding` and `nn.CosineEmbeddingLoss` to work without  error on non-float CUDA (half, double)- Fix a bug in `nn.Embedding` when the `max_norm` option was used. Some of the  indices were not respecting `max_norm` and this is fixed.- Fix corner-case in `Variable`'s SetItem where gradient was of incorrect shape.  `x.grad` used to be of shape 20, because `y[1]`` was of shape 20.  ```  x = Variable(torch.randn(1, 20), requires_grad=True)  y = Variable(torch.zeros(10, 20))  y[1] = x  ```- Fix a segfault in Conv1d when input doesn't require grad.- Assertions in `pack_padded_sequence` to check that sequence is of length > 0- `torch.prod`'s autograd forumlae were incorrect if the Tensor had 0. This  formula has been fixed.- Variable `expand` and `expand_as` had incorrect dimension inference when using  broadcasting semantics. The formula has been fixed in these cases.- Fix a size mismatch in `CosineEmbeddingLoss`. [See this issue](https://github.com/pytorch/pytorch/issues/1058) for more details.- Fixed a bug in LBFGS that caused it to use uninitialized locals. [See issue](https://github.com/pytorch/pytorch/issues/1039)- Add assertions for negative padding in `nn.Co",https://api.github.com/repos/pytorch/pytorch/releases/5938760,2017-03-31T16:27:41Z,1,1,code debts
angular,fix(compiler-cli): exclude type-only imports from cycle analysis (#42453,https://api.github.com/repos/angular/angular/releases/44365845,2021-06-09T18:06:06Z,0,0,0
twbs,**- #31276: v5: Tweak some colo,https://api.github.com/repos/twbs/bootstrap/releases/31942538,2020-09-29T15:38:32Z,0,0,0
angular,consider density descriptors with multiple digits as valid (#47230,https://api.github.com/repos/angular/angular/releases/75397111,2022-08-25T21:30:46Z,1,0,0
pytorch,Fix thread safety issue with distributed optimizers and TorchScript ([#46071](https://github.com/pytorch/pytorch/pull/46071))### TorchScri,https://api.github.com/repos/pytorch/pytorch/releases/33111309,2020-10-27T16:35:58Z,1,1,code_debts(Multi-thread correctness)
numpy,"Setting a `MaskedArray.fill_value` to a nonscalar array is deprecatedsince the logic to broadcast the fill value to the array is fragile,especially when slicing.(`gh13698 <https://github.com/numpy/numpy/pull/13698>`\_\_)Deprecate `PyArray_As1D`, `PyArray_As2",https://api.github.com/repos/numpy/numpy/releases/22015758,2019-12-06T02:14:03Z,1,1,code_debt
angular,include component name into unknown element/property error message (#46160,https://api.github.com/repos/angular/angular/releases/68471016,2022-06-02T16:57:04Z,0,0,0
angular,correct type of nextState parameter in canDeactivate (#48038,https://api.github.com/repos/angular/angular/releases/83941441,2022-11-23T02:56:36Z,0,0,0
facebook,"`useId` is a new hook for generating unique IDs on both the client and server, while avoiding hydration mismatches. It is primarily useful for component libraries integrating with accessibility APIs that require unique IDs. This solves an issue that already exists in React 17 and below, but itâ€™s even more important in React 18 because of how the new streaming server renderer delivers HTML out-of-orde",https://api.github.com/repos/facebook/react/releases/63062908,2022-03-29T17:22:34Z,1,1,compatibility_debt
pytorch, `torch.jit.save()`: Improve error message when trying to save a model with Python code. ([#16850](https://github.com/pytorch/pytorch/pull/16850,https://api.github.com/repos/pytorch/pytorch/releases/17080796,2019-05-01T00:09:03Z,1,1,code debts
angular,introduce EnvironmentProviders wrapper type (#47669,https://api.github.com/repos/angular/angular/releases/79679497,2022-10-12T18:38:24Z,0,0,0
twbs,**- #31877: Apply smooth-scroll when `prefers-reduced-motion: no-preferenc,https://api.github.com/repos/twbs/bootstrap/releases/33814902,2020-11-11T17:13:10Z,0,0,0
pytorch,Improve `native_batch_norm_backward` performance on CUDA ([#58240](https://github.com/pytorch/pytorch/pull/58240),https://api.github.com/repos/pytorch/pytorch/releases/43927405,2021-06-15T16:06:52Z,1,1,code_debt(Slow algorithm)
tensorflow,Remove unmaintained `tf.contrib.ndlstm`. You can find it externally at https://github.com/tmbarchive/tfndlstm.,https://api.github.com/repos/tensorflow/tensorflow/releases/10195374,2018-03-21T17:26:57Z,0,1,code debts
numpy,    277c501cfcc67767d73d83a53ba69ecb  numpy1.15.4cp27cp27mmacosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl    4c687d8cd7833e0b549d4a20905f29a2  numpy1.15.4cp27cp27mmanylinux1_i686.whl    988d0b321d0b7576b105528fc948ddc3  numpy1.15.4cp27cp27mmanylinux1_x86_64.whl    ea6bd39d05539847a0ebb12ff955251a  numpy1.15.4cp27cp27mumanylinux1_i686.whl    8ef2d1ea4571cdd0e7e8dfd5128436b4  numpy1.15.4cp27cp27mumanylinux1_x86_64.whl    b550d4cc012623a0c38f1392e08f4805  numpy1.15.4cp27nonewin32.whl    cb38e4778d9db33199dc7bb6a69ce089  numpy1.15.4cp27nonewin_amd64.whl    fa0acf5b2f852454346df5486a4ff4d9  numpy1.15.4cp34cp34mmacosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl    a7614f6318899aa1bfbc337232c4647f  numpy1.15.4cp34cp34mmanylinux1_i686.whl    ae16e02274996ff926a30f23f6d6d7e8  numpy1.15.4cp34cp34mmanylinux1_x86_64.whl    c1e1f381de7abc96509d4c5463903755  numpy1.15.4cp34nonewin32.whl    c269c8f2fce6cefdffe5e3821fc04fb5  numpy1.15.4cp34nonewin_amd64.whl    8906282c374b9b008c5c6401e5dc750b  numpy1.15.4cp35cp35mmacosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl    537949e404ecc5814cb0db534bdfef36  numpy1.15.4cp35cp35mmanylinux1_i686.whl    3b10a2fcf8610bbbfe08161e1d9d176e  numpy1.15.4cp35cp35mmanylinux1_x86_64.whl    b67621a1c9b8dcac707ca22055629e9f  numpy1.15.4cp35nonewin32.whl    25b45b69d624cb07a8c05a5f82779b0a  numpy1.15.4cp35nonewin_amd64.whl    76ed46a4d4e9cdb7076bf1359d9df1d4  numpy1.15.4cp36cp36mmacosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl    b98cbad7770856dc12c827dca7c201b4  numpy1.15.4cp36cp36mmanylinux1_i686.whl    6293fa6db83849aab3a8b1a606cf3d03  numpy1.15.4cp36cp36mmanylinux1_x86_64.whl    21df485f92248c13cab3838762d717f6  numpy1.15.4cp36nonewin32.whl    c9cf7a267f8d2f57dc6384cc8b9f5acf  numpy1.15.4cp36nonewin_amd64.whl    1f6990e094c6b2bb47c6a528ac7b1263  numpy1.15.4cp37cp37mmacosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl    e79239cd9a3ce3cbfa5e7345bfb2ca56  numpy1.15.4cp37cp37mmanylinux1_i686.whl    fc046ba978ef4dd0556af09643c57d30  numpy1.15.4cp37cp37mmanylinux1_x86_64.whl    6291159933eb5a7f9c0bf28ae9707739  numpy1.15.4cp37nonewin32.whl    6097910d675f9e81d5d131b91a6c5c61  numpy1.15.4cp37nonewin_amd64.whl    b3626fec2f39ab01cad8bbb63a103742  numpy1.15.4.tar.gz    219ac537d12cf06ed14f478662096ebc  numpy1.15.4.zipSHA2,https://api.github.com/repos/numpy/numpy/releases/13818967,2018-11-04T16:55:20Z,0,0,0
facebook,Add `act(async () => ...)` for testing asynchronous state updates. ([@threepointone](https://github.com/threepointone) in [#14853](https://github.com/facebook/react/pull/14853,https://api.github.com/repos/facebook/react/releases/19177438,2019-08-08T21:14:59Z,0,0,0
pytorch,`torch.empty_strided` Add docs ([23735](https://github.com/pytorch/pytorch/pull/23735),https://api.github.com/repos/pytorch/pytorch/releases/20597721,2019-10-10T17:26:52Z,0,0,0
twbs,**- #37399: Only show added in page badge if releva,https://api.github.com/repos/twbs/bootstrap/releases/87186776,2022-12-24T16:39:27Z,0,0,0
twbs,**- #37282: Docs: standardize usage of `<kbd,https://api.github.com/repos/twbs/bootstrap/releases/87186776,2022-12-24T16:39:27Z,0,0,0
twbs,**- [#32077](https://github.com/twbs/bootstrap/pull/32077): Switch to Hu,https://api.github.com/repos/twbs/bootstrap/releases/36608458,2021-01-19T16:19:39Z,0,0,0
pytorch,Allow inlining of more Tensor methods ([#53905](https://github.com/pytorch/pytorch/pull/53905))  ,https://api.github.com/repos/pytorch/pytorch/releases/43927405,2021-06-15T16:06:52Z,0,0,0
tensorflow,"  (since v2.7) `tf.Variable.scatter_add` (and other scatter methods, both on ref and resource variables)      ",https://api.github.com/repos/tensorflow/tensorflow/releases/58476446,2022-02-02T16:54:38Z,0,0,0
numpy,"The printing style of ``np.void`` arrays is now independently customizableusing the ``formatter`` argument to ``np.set_printoptions``, using the``'void'`` key, instead of the catchall ``numpystr`` key as before.Reduced memory usage of ``np.loadtxt",https://api.github.com/repos/numpy/numpy/releases/8895424,2017-12-13T20:57:32Z,1,1,code_debts
pytorch,Add function signature for `pixel_shuffle` (#[45661](https://github.com/pytorch/pytorch/pull/45661,https://api.github.com/repos/pytorch/pytorch/releases/33111309,2020-10-27T16:35:58Z,0,0,0
pytorch,Make `Tracer.trace()` just return a Graph ([#45704](https://github.com/pytorch/pytorch/pull/45704,https://api.github.com/repos/pytorch/pytorch/releases/39280362,2021-03-04T20:44:39Z,0,0,0
facebook,Shallow renderer should filter legacy context according to `contextTypes`. ([@koba04](https://github.com/koba04) in [#11922](https://github.com/facebook/react/pull/11922,https://api.github.com/repos/facebook/react/releases/10325349,2018-03-29T20:57:42Z,0,1,code_debt
pytorch,`torch.linspace` clearer error message for negative step sizes. ([28274](https://github.com/pytorch/pytorch/pull/28274),https://api.github.com/repos/pytorch/pytorch/releases/22877176,2020-01-16T00:03:49Z,1,1,code_debt
pytorch, Improve portability of int and float checks. ([#19532](https://github.com/pytorch/pytorch/pull/19532,https://api.github.com/repos/pytorch/pytorch/releases/17080796,2019-05-01T00:09:03Z,1,1,compatibility_debt
angular,include query parameters for open HTTP requests in `verify` (#44917,https://api.github.com/repos/angular/angular/releases/58542213,2022-02-02T18:48:41Z,0,0,0
twbs,**- #34255: Don't set auto margin on offcanvas clo,https://api.github.com/repos/twbs/bootstrap/releases/45049786,2021-06-22T18:36:18Z,0,0,0
twbs,**- Updated links to always use https and fix broken URL,https://api.github.com/repos/twbs/bootstrap/releases/14528836,2018-12-14T00:27:06Z,0,1,code_debt
facebook,Add the ability to specify `propTypes` on a context provider component. ([@nicolevy](https://github.com/nicolevy) in [#12658](https://github.com/facebook/react/pull/12658,https://api.github.com/repos/facebook/react/releases/11147851,2018-05-24T01:19:16Z,0,0,0
facebook,"### React- Add `React.PureComponent` - a new base class to extend, replacing `react-addons-pure-render-mixin` now that mixins don't work with ES2015 classes. ([@spicyj](https://github.com/spicyj) in [#7195](https://github.com/facebook/react/pull/7195))- Add new warning when modifying `this.props.children`. ([@jimfb](https://github.com/jimfb) in [#7001](https://github.com/facebook/react/pull/7001))- Fixed issue with ref resolution order. ([@gaearon](https://github.com/gaearon) in [#7101](https://github.com/facebook/react/pull/7101))- Warn when mixin is undefined. ([@swaroopsm](https://github.com/swaroopsm) in [#6158](https://github.com/facebook/react/pull/6158))- Downgrade ""unexpected batch number"" invariant to a warning. ([@spicyj](https://github.com/spicyj) in [#7133](https://github.com/facebook/react/pull/7133))- Validate arguments to `oneOf` and `oneOfType` PropTypes sooner. ([@troydemonbreun](https://github.com/troydemonbreun) in [#6316](https://github.com/facebook/react/pull/6316))- Warn when calling PropTypes directly. ([@Aweary](https://github.com/Aweary) in [#7132](https://github.com/facebook/react/pull/7132), [#7194](https://github.com/facebook/react/pull/7194))- Improve warning when using Maps as children. ([@keyanzhang](https://github.com/keyanzhang) in [#7260](https://github.com/facebook/react/pull/7260))- Add additional type information to the `PropTypes.element` warning. ([@alexzherdev](https://github.com/alexzherdev) in [#7319](https://github.com/facebook/react/pull/7319))- Improve component identification in no-op `setState` warning. ([@keyanzhang](https://github.com/keyanzhang) in [#7326](https://github.com/facebook/react/pull/7326))### React DOM- Fix issue with nested server rendering. ([@Aweary](https://github.com/Aweary) in [#7033](https://github.com/facebook/react/pull/7033))- Add `xmlns`, `xmlnsXlink` to supported SVG attributes. ([@salzhrani](https://github.com/salzhrani) in [#6471](https://github.com/facebook/react/pull/6471))- Add `referrerPolicy` to supported HTML attributes. ([@Aweary](https://github.com/Aweary) in [#7274](https://github.com/facebook/react/pull/7274))- Fix issue resulting in `<input type=""range"">` initial value being rounded. ([@troydemonbreun](https://github.com/troydemonbreun) in [#7251](https://github.com/facebook/react/pull/7251))### React Test Renderer- Initial public release of package allowing more focused testing. Install with `npm install react-test-renderer`. ([@spicyj](https://github.com/spicyj) in [#6944](https://github.com/facebook/react/pull/6944), [#7258](https://github.com/facebook/react/pull/7258), [@iamdustan](https://github.com/iamdustan) in [#7362](https://github.com/facebook/react/pull/7362))### React Perf Add-on- Fix issue resulting in excessive warnings when encountering an internal measurement error. ([@sassanh](https://github.com/sassanh) in [#7299](https://github.com/facebook/react/pull/7299))### React TestUtils Add-on- Implement `type` property on for events created via `TestUtils.Simulate.*`. ([@yaycmyk](https://github.com/yaycmyk) in [#6154](https://github.com/facebook/react/pull/6154))- Fix crash when running TestUtils with the production build of React. ([@gaearon](https://github.com/gaearon) in [#7246](https://github.com/facebook/react/pull/7246))",https://api.github.com/repos/facebook/react/releases/3772823,2016-07-29T18:46:39Z,1,1,design debts
pytorch,Fix a build failure on s390x ([26233](https://github.com/pytorch/pytorch/pull/26233),https://api.github.com/repos/pytorch/pytorch/releases/20597721,2019-10-10T17:26:52Z,0,1,build debts
tensorflow,"Tensorflow code now produces 2 different pip packages: tensorflow_core containing all the code (in the future it will contain only the private implementation) and tensorflow which is a virtual pip package doing forwarding to tensorflow_core (and in the future will contain only the public API of tensorflow). We don't expect this to be breaking, unless you were importing directly from the implementation.  Removed the `freeze_graph` command line tool; `SavedModel` should be used in place of frozen graphs.",https://api.github.com/repos/tensorflow/tensorflow/releases/20360510,2019-09-30T17:47:54Z,1,1,req_debt
facebook,": React now depends on modern browsers features including `Promise`, `Symbol`, and `Object.assign`. If you support older browsers and devices such as Internet Explorer which do not provide modern browser features natively or have non-compliant implementations, consider including a global polyfill in your bundled application.### Scheduler (Experimenta",https://api.github.com/repos/facebook/react/releases/63062908,2022-03-29T17:22:34Z,1,1,Compatibility debts
numpy,"### Improved performance in integer division of NumPy arraysInteger division of NumPy arrays now uses[libdivide](https://libdivide.com/) when the divisor is a constant. Withthe usage of libdivide and other minor optimizations, there is a largespeedup. The `//` operator and `np.floor_divide` makes use of the newchanges.([gh17727](https://github.com/numpy/numpy/pull/17727))### Improve performance of `np.save` and `np.load` for small arrays`np.save` is now a lot faster for small arrays.`np.load` is also faster for small arrays, but only when serializingwith a version \>= `(3, 0)`.Both are done by removing checks that are only relevant for Python 2,while still maintaining compatibility with arrays which might have beencreated by Python 2.([gh18657](https://github.com/numpy/numpy/pull/18657))Chang",https://api.github.com/repos/numpy/numpy/releases/43474493,2021-05-24T16:38:20Z,1,1,algorithm_debt(Slow algorithm)
numpy,"A new extensible `numpy.random` module along with four selectable random numbergenerators and improved seeding designed for use in parallel processes has beenadded. The currently available :ref:`Bit Generators <bit_generator>` are`~mt19937.MT19937`, `~pcg64.PCG64`, `~philox.Philox`, and `~sfc64.SFC64`.``PCG64`` is the new default while ``MT19937`` is retained for backwardscompatibility. Note that the legacy random module is unchanged and is nowfrozen, your current results will not change. More information is available inthe :ref:`API change description <newordifferent>` and in the `toplevel view<numpy.random>` documentation.libFLA",https://api.github.com/repos/numpy/numpy/releases/18897243,2019-07-26T18:46:42Z,1,0,0
numpy,   NumPy now has a DLPack backend. DLPack provides a common interchange    format for array (tensor) dat,https://api.github.com/repos/numpy/numpy/releases/53946492,2021-11-23T20:09:59Z,0,0,0
twbs,**- #36461: Fix alert border radi,https://api.github.com/repos/twbs/bootstrap/releases/72344034,2022-07-19T15:47:21Z,0,0,0
facebook,Warn when `memo` or `forwardRef` components return `undefined`. ([@bvaughn](https://github.com/bvaughn) in [#19550](https://github.com/facebook/react/pull/19550,https://api.github.com/repos/facebook/react/releases/32833064,2020-10-20T20:45:11Z,0,0,0
tensorflow,`tf.contrib.distributions.MultivariateNormalFull` replaced by `tf.contrib.distributions.MultivariateNormalTriL`.,https://api.github.com/repos/tensorflow/tensorflow/releases/5943106,2017-04-04T21:30:33Z,0,0,0
twbs,**- #35447: Remove the now outdated build/svgo.y,https://api.github.com/repos/twbs/bootstrap/releases/66823120,2022-05-13T16:44:56Z,1,1,code_debt(deed code)
pytorch,torch::nn::Upsample / PixelShuffle ([28413](https://github.com/pytorch/pytorch/pull/28413)) ([28140](https://github.com/pytorch/pytorch/pull/28140)).### New torch::nn::functional functio,https://api.github.com/repos/pytorch/pytorch/releases/22877176,2020-01-16T00:03:49Z,0,0,0
angular,propagate `standalone` flag to runtime (#44973,https://api.github.com/repos/angular/angular/releases/68471016,2022-06-02T16:57:04Z,0,0,0
tensorflow,"C-API functions `TF_StringDecode`, `TF_StringEncode`, and `TF_StringEncodedSize` are no longer relevant and have been removed; see `core/platform/ctstring.h` for  string access/modification in C.",https://api.github.com/repos/tensorflow/tensorflow/releases/33375724,2020-11-02T21:57:54Z,1,1,code_debt(deed code)
angular,preserve trailing commas in code generated by standalone migration (#49533,https://api.github.com/repos/angular/angular/releases/96546209,2023-03-22T20:15:58Z,0,0,0
twbs,**- **New:** Added a new spinner loading componen,https://api.github.com/repos/twbs/bootstrap/releases/14663710,2018-12-21T17:05:58Z,0,0,0
twbs,**- #33841: Fix typo in scrollspy do,https://api.github.com/repos/twbs/bootstrap/releases/42912765,2021-05-13T16:27:03Z,1,1,code_bert(low code)
pytorch,Fix typo in `torch.load` docstring for the `f` parameter ([#49350](https://github.com/pytorch/pytorch/pull/49350,https://api.github.com/repos/pytorch/pytorch/releases/39280362,2021-03-04T20:44:39Z,1,1,documentation_debt
numpy,"Previously ``np.dtype([(u'name', float)])`` would raise a ``TypeError`` inPython 2, as only bytestrings were allowed in field names. Now any unicodestring field names will be encoded with the ``ascii`` codec, raising a``UnicodeEncodeError`` upon failure.This change makes it easier to write Python 2/3 compatible code using``from __future__ import unicode_literals``, which previously would causestring literal field names to raise a TypeError in Python 2.Comparison ufuncs accept ``dtype=object``, overriding the default ``bool",https://api.github.com/repos/numpy/numpy/releases/11592370,2018-06-21T17:01:13Z,0,1,compatibility_debt
twbs,**- #33734: Add missing test for clicking select option in a dropdown********## ðŸ§° Misc**,https://api.github.com/repos/twbs/bootstrap/releases/42499470,2021-05-05T19:41:11Z,1,1,test debts
numpy,"This means it behaves like a readonly dictionary, and has a new ``.values()``method and ``len()`` implementation.For python 3, this means that ``.iteritems()``, ``.iterkeys()`` have beendeprecated, and ``.keys()`` and ``.items()`` now return views and not lists.This is consistent with how the builtin ``dict`` type changed between python 2and python 3.Under certain conditions, ``nditer`` must be used in a context manag",https://api.github.com/repos/numpy/numpy/releases/12059706,2018-07-23T16:38:57Z,0,0,0
numpy,"`ufunc.reduce`, `sum`, `prod`, `min`, `max` allnow accept a ``where`` keyword argument, which can be used to tell whichelements to include in the reduction.  For reductions that do not have anidentity, it is necessary to also pass in an initial value (e.g.,``initial=np.inf`` for `min`).  For instance, the equivalent of`nansum` would be ``np.sum(a, where=~np.isnan(a))``.Timsort and radix sort have replaced mergesort for stable sorti",https://api.github.com/repos/numpy/numpy/releases/18897243,2019-07-26T18:46:42Z,0,0,0
tensorflow,"Generics (e.g., `Tensor<Integer>`) for improved type-safety    (courtesy @andrewcmyers).",https://api.github.com/repos/tensorflow/tensorflow/releases/8363957,2017-11-02T18:29:02Z,1,0,0
numpy,   ENH: Detect CPU features on FreeBSD/powerpc64,https://api.github.com/repos/numpy/numpy/releases/91397335,2023-02-05T20:16:57Z,0,0,0
facebook, React no longer throws if you return `undefined` from a component. This makes the allowed component return values consistent with values that are allowed in the middle of a component tree. We suggest to use a linter to prevent mistakes like forgetting a `return` statement before JS,https://api.github.com/repos/facebook/react/releases/63062908,2022-03-29T17:22:34Z,1,1,code_debt
facebook,Fix an incorrect `event.target` value for the `onChange` event in IE9. ([@nhunzaker](https://github.com/nhunzaker) in [#12976](https://github.com/facebook/react/pull/12976,https://api.github.com/repos/facebook/react/releases/11465289,2018-06-13T16:52:39Z,0,1,defect_debt
tensorflow,Renames `tf.distribute.experimental.CollectiveHints` to `tf.distribute.experimental.CommunicationOptions`.,https://api.github.com/repos/tensorflow/tensorflow/releases/33667328,2020-11-09T19:37:33Z,0,0,0
numpy,    2255387d9bc4c626b30b4b15d41360aa  numpy1.18.0rc1cp35cp35mmacosx_10_6_intel.whl    cebfd1b532cd5a0c389a12e0e9b9fc59  numpy1.18.0rc1cp35cp35mmanylinux1_i686.whl    837c58136102cfa1689e3ce6092a3fe9  numpy1.18.0rc1cp35cp35mmanylinux1_x86_64.whl    6dec034185665cb0968da09d1193da97  numpy1.18.0rc1cp35cp35mwin32.whl    d551b3da446160c3a76329916d4544d2  numpy1.18.0rc1cp35cp35mwin_amd64.whl    d39fad23c70d9e088328f51f989ceffe  numpy1.18.0rc1cp36cp36mmacosx_10_9_x86_64.whl    8b0ed4cdf265428bdaf3e8619c18754a  numpy1.18.0rc1cp36cp36mmanylinux1_i686.whl    aaa92422da55cb6e3136f89860239975  numpy1.18.0rc1cp36cp36mmanylinux1_x86_64.whl    2406854f74f825d95a95a671034eef3b  numpy1.18.0rc1cp36cp36mwin32.whl    f706077e4d9ef783c43eb11dabc08e1e  numpy1.18.0rc1cp36cp36mwin_amd64.whl    caaa53c0e5c8c1fac3af572b98569c0c  numpy1.18.0rc1cp37cp37mmacosx_10_9_x86_64.whl    b1c2decd9ac8c6acb5c0b75372c5bbe9  numpy1.18.0rc1cp37cp37mmanylinux1_i686.whl    575f399026a997e9af2c2108c1542b7f  numpy1.18.0rc1cp37cp37mmanylinux1_x86_64.whl    4d4bc961757251346c31dd6412961946  numpy1.18.0rc1cp37cp37mwin32.whl    df6cede6ee4d4f75e739771ae27920bb  numpy1.18.0rc1cp37cp37mwin_amd64.whl    eea97481a22b8ec1b486fe8dfcc4bbe4  numpy1.18.0rc1cp38cp38macosx_10_9_x86_64.whl    a7ecc50638b65934388803e0c16e01ab  numpy1.18.0rc1cp38cp38manylinux1_i686.whl    9626634ff55aba4c1f7726a969ef4e76  numpy1.18.0rc1cp38cp38manylinux1_x86_64.whl    4e6e1f36860da4b1f5cbe9874b71c6fc  numpy1.18.0rc1cp38cp38win32.whl    a75c35b50e1c39428ff42f6291337487  numpy1.18.0rc1cp38cp38win_amd64.whl    076bed609ce25b400c3fa028d67a0b63  numpy1.18.0rc1.tar.gz    2708c1b940227b917c088ad3b79183bf  numpy1.18.0rc1.zipSHA2,https://api.github.com/repos/numpy/numpy/releases/22015758,2019-12-06T02:14:03Z,0,0,0
pytorch,`F.cosine_similarity`: Improve numerical stability ([#31378](https://github.com/pytorch/pytorch/pull/31378,https://api.github.com/repos/pytorch/pytorch/releases/70696589,2022-06-28T16:48:06Z,1,1,algorithm_debt
numpy,"   BUG, SIMD: Fix memory overlap in ufunc comparison loo",https://api.github.com/repos/numpy/numpy/releases/87244731,2022-12-26T13:56:53Z,1,1,fix